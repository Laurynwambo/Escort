{"ast":null,"code":"// import axios from \"axios\";\nimport { GLOBALTYPES } from \"./globalTypes\";\nimport { getDataAPI, deleteDataAPI } from \"../../utils/fetchData\";\nimport { createNotify } from \"./notifyAction\";\nexport const ADMIN_TYPES = {\n  GET_TOTAL_USERS: \"GET_TOTAL_USERS\",\n  USER_UPDATE: \"USER_UPDATE\",\n  USER_ADD: \"USER_ADD\",\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\n  USER_LOADING: \"USER_LOADING\",\n  GET_ERRORS: \"GET_ERRORS\",\n  LOADING_ADMIN: \"LOADING_ADMIN\",\n  DELETE_POST: \"DELETE_POST\"\n};\n/* export const addUser = (userData, history) => dispatch => {\r\n  axios\r\n      .post(\"/api/user-add\", userData)\r\n      .then(res =>\r\n          dispatch({\r\n              type: ADMIN_TYPES.USER_ADD,\r\n              payload: res,\r\n          })\r\n      ).catch(err =>\r\n      dispatch({\r\n          type: ADMIN_TYPES.GET_ERRORS,\r\n          payload: err.response.data\r\n      })\r\n  );\r\n}; */\n\n/* export const updateUser = (token) => dispatch => {\r\n  axios\r\n      .post(\"/api/user-update\", userData)\r\n      .then(res =>\r\n          dispatch({\r\n              type: ADMIN_TYPES.USER_UPDATE,\r\n              payload: res,\r\n          })\r\n      ).catch(err =>\r\n      dispatch({\r\n          type: ADMIN_TYPES.GET_ERRORS,\r\n          payload: err.response.data\r\n      })\r\n  );\r\n}; */\n\nexport const getTotalUsers = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_users\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_USERS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const addUser = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"/user-add\", token);\n    dispatch({\n      type: ADMIN_TYPES.USER_ADD,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalPosts = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_posts\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_POSTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalComments = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_comments\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_COMMENTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalLikes = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_likes\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_LIKES,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalSpamPosts = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_spam_posts\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_SPAM_POSTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getSpamPosts = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_spam_posts\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_SPAM_POSTS,\n      payload: res.data.spamPosts\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const deleteSpamPost = _ref => {\n  let {\n    post,\n    auth,\n    socket\n  } = _ref;\n  return async dispatch => {\n    dispatch({\n      type: ADMIN_TYPES.DELETE_POST,\n      payload: post\n    });\n\n    try {\n      const res = await deleteDataAPI(`delete_spam_posts/${post._id}`, auth.token);\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          success: res.data.msg\n        }\n      }); // todo notification\n\n      const msg = {\n        id: auth.user._id,\n        text: \"Your Post is deleted due to too many reports.\",\n        recipients: [post.user._id],\n        url: `/profile/${post.user._id}`\n      };\n      dispatch(createNotify({\n        msg,\n        auth,\n        socket\n      }));\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};\nexport const getTotalActiveUsers = _ref2 => {\n  let {\n    auth,\n    socket\n  } = _ref2;\n  return async dispatch => {\n    try {\n      socket.emit('getActiveUsers', auth.user._id);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Laureen/Downloads/escort/client/src/redux/actions/adminAction.js"],"names":["GLOBALTYPES","getDataAPI","deleteDataAPI","createNotify","ADMIN_TYPES","GET_TOTAL_USERS","USER_UPDATE","USER_ADD","SET_CURRENT_USER","USER_LOADING","GET_ERRORS","LOADING_ADMIN","DELETE_POST","getTotalUsers","token","dispatch","type","payload","res","data","err","ALERT","error","response","msg","addUser","getTotalPosts","GET_TOTAL_POSTS","getTotalComments","GET_TOTAL_COMMENTS","getTotalLikes","GET_TOTAL_LIKES","getTotalSpamPosts","GET_TOTAL_SPAM_POSTS","getSpamPosts","GET_SPAM_POSTS","spamPosts","deleteSpamPost","post","auth","socket","_id","success","id","user","text","recipients","url","getTotalActiveUsers","emit"],"mappings":"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","sourcesContent":["// import axios from \"axios\";\r\nimport { GLOBALTYPES } from \"./globalTypes\";\r\nimport { getDataAPI, deleteDataAPI } from \"../../utils/fetchData\";\r\nimport { createNotify } from \"./notifyAction\";\r\n\r\nexport const ADMIN_TYPES = {\r\n  GET_TOTAL_USERS: \"GET_TOTAL_USERS\",\r\n  USER_UPDATE: \"USER_UPDATE\",\r\n  USER_ADD: \"USER_ADD\",\r\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\r\n  USER_LOADING: \"USER_LOADING\",\r\n  GET_ERRORS: \"GET_ERRORS\",\r\n  LOADING_ADMIN: \"LOADING_ADMIN\",\r\n  DELETE_POST: \"DELETE_POST\",\r\n};\r\n\r\n/* export const addUser = (userData, history) => dispatch => {\r\n  axios\r\n      .post(\"/api/user-add\", userData)\r\n      .then(res =>\r\n          dispatch({\r\n              type: ADMIN_TYPES.USER_ADD,\r\n              payload: res,\r\n          })\r\n      ).catch(err =>\r\n      dispatch({\r\n          type: ADMIN_TYPES.GET_ERRORS,\r\n          payload: err.response.data\r\n      })\r\n  );\r\n}; */\r\n\r\n\r\n/* export const updateUser = (token) => dispatch => {\r\n  axios\r\n      .post(\"/api/user-update\", userData)\r\n      .then(res =>\r\n          dispatch({\r\n              type: ADMIN_TYPES.USER_UPDATE,\r\n              payload: res,\r\n          })\r\n      ).catch(err =>\r\n      dispatch({\r\n          type: ADMIN_TYPES.GET_ERRORS,\r\n          payload: err.response.data\r\n      })\r\n  );\r\n}; */\r\n\r\n\r\n\r\nexport const getTotalUsers = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_users\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_USERS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addUser = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"/user-add\", token);\r\n    dispatch({ type: ADMIN_TYPES.USER_ADD, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const getTotalPosts = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_posts\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_POSTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const getTotalComments = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_comments\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_COMMENTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const getTotalLikes = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_likes\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_LIKES, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalSpamPosts = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_spam_posts\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_SPAM_POSTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getSpamPosts = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_spam_posts\", token);\r\n    \r\n    dispatch({ type: ADMIN_TYPES.GET_SPAM_POSTS, payload: res.data.spamPosts });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteSpamPost = ({ post, auth, socket }) => async (dispatch) => {\r\n  dispatch({ type: ADMIN_TYPES.DELETE_POST, payload: post });\r\n\r\n  try {\r\n    const res = await deleteDataAPI(\r\n      `delete_spam_posts/${post._id}`,\r\n      auth.token\r\n    );\r\n\r\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } });\r\n\r\n\r\n    // todo notification\r\n    const msg = {\r\n      id: auth.user._id,\r\n      text: \"Your Post is deleted due to too many reports.\",\r\n      recipients: [post.user._id],\r\n      url: `/profile/${post.user._id}`,\r\n    };\r\n\r\n    dispatch(createNotify({ msg, auth, socket }));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalActiveUsers = ({auth, socket}) => async (dispatch) => {\r\n  try {\r\n    socket.emit('getActiveUsers', auth.user._id);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}