{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laureen\\\\Downloads\\\\escort\\\\client\\\\src\\\\components\\\\StatusModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GLOBALTYPES } from \"../redux/actions/globalTypes\";\nimport { createPost, updatePost } from \"../redux/actions/postAction\";\nimport Icons from \"./Icons\"; // import { imageShow, videoShow } from \"../utils/mediaShow\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StatusModal = () => {\n  _s();\n\n  const {\n    auth,\n    theme,\n    status,\n    socket\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [stream, setStream] = useState(false);\n  const videoRef = useRef();\n  const refCanvas = useRef();\n  const [tracks, setTracks] = useState(\"\");\n\n  const handleStream = () => {\n    setStream(true);\n\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(mediaStream => {\n        videoRef.current.srcObject = mediaStream;\n        videoRef.current.play();\n        const track = mediaStream.getTracks();\n        setTracks(track[0]);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const handleCapture = () => {\n    const width = videoRef.current.clientWidth;\n    const height = videoRef.current.clientHeight;\n    refCanvas.current.setAttribute(\"width\", width);\n    refCanvas.current.setAttribute(\"height\", height);\n    const ctx = refCanvas.current.getContext(\"2d\");\n    ctx.drawImage(videoRef.current, 0, 0, width, height);\n    let URL = refCanvas.current.toDataURL();\n    setImages([...images, {\n      camera: URL\n    }]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (status.onEdit) {\n      dispatch(updatePost({\n        content,\n        images,\n        auth,\n        status\n      }));\n    } else {\n      dispatch(createPost({\n        content,\n        images,\n        auth,\n        socket\n      }));\n    }\n\n    setContent(\"\");\n    setImages([]);\n\n    if (tracks) {\n      tracks.stop();\n    }\n\n    dispatch({\n      type: GLOBALTYPES.STATUS,\n      payload: false\n    });\n  };\n\n  useEffect(() => {\n    if (status.onEdit) {\n      setContent(status.content);\n      setImages(status.images);\n    }\n  }, [status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status_modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status_header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icons, {\n            setContent: setContent,\n            content: content,\n            theme: theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show_images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_images\",\n          children: stream ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-camera\",\n            onClick: handleCapture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-camera\",\n              onClick: handleStream\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StatusModal, \"zDuOUFLGHRmWHcyt+S2QGRHNiW8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = StatusModal;\nexport default StatusModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusModal\");","map":{"version":3,"sources":["C:/Users/Laureen/Downloads/escort/client/src/components/StatusModal.js"],"names":["React","useState","useRef","useEffect","useDispatch","useSelector","GLOBALTYPES","createPost","updatePost","Icons","StatusModal","auth","theme","status","socket","state","dispatch","content","setContent","images","setImages","stream","setStream","videoRef","refCanvas","tracks","setTracks","handleStream","navigator","mediaDevices","getUserMedia","video","then","mediaStream","current","srcObject","play","track","getTracks","catch","err","console","log","handleCapture","width","clientWidth","height","clientHeight","setAttribute","ctx","getContext","drawImage","URL","toDataURL","camera","handleSubmit","e","preventDefault","onEdit","stop","type","STATUS","payload"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GLOBALTYPES } from \"../redux/actions/globalTypes\";\nimport { createPost, updatePost } from \"../redux/actions/postAction\";\nimport Icons from \"./Icons\";\n// import { imageShow, videoShow } from \"../utils/mediaShow\";\n\nconst StatusModal = () => {\n  const { auth, theme, status, socket } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [content, setContent] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [stream, setStream] = useState(false);\n  const videoRef = useRef();\n  const refCanvas = useRef();\n  const [tracks, setTracks] = useState(\"\");\n\n \n\n\n  const handleStream = () => {\n    setStream(true);\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then((mediaStream) => {\n          videoRef.current.srcObject = mediaStream;\n          videoRef.current.play();\n          const track = mediaStream.getTracks();\n          setTracks(track[0]);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const handleCapture = () => {\n    const width = videoRef.current.clientWidth;\n    const height = videoRef.current.clientHeight;\n\n    refCanvas.current.setAttribute(\"width\", width);\n    refCanvas.current.setAttribute(\"height\", height);\n\n    const ctx = refCanvas.current.getContext(\"2d\");\n    ctx.drawImage(videoRef.current, 0, 0, width, height);\n\n    let URL = refCanvas.current.toDataURL();\n    setImages([...images, { camera: URL }]);\n  };\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n\n    if (status.onEdit) {\n      dispatch(updatePost({ content, images, auth, status }));\n    } else {\n      dispatch(createPost({ content, images, auth, socket }));\n    }\n\n    setContent(\"\");\n    setImages([]);\n    if (tracks) {\n      tracks.stop();\n    }\n    dispatch({\n      type: GLOBALTYPES.STATUS,\n      payload: false,\n    });\n  };\n\n  useEffect(() => {\n    if (status.onEdit) {\n      setContent(status.content);\n      setImages(status.images);\n    }\n  }, [status]);\n\n  \n\n  return (\n    <div className=\"status_modal\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"status_header\">\n        </div>\n        <div className=\"status_body\">\n          \n\n          <div className=\"d-flex\">\n            <div className=\"flex-fill\"></div>\n            <Icons setContent={setContent} content={content} theme={theme} />\n          </div>\n\n          <div className=\"show_images\">\n          \n          </div>\n\n        \n\n          <div className=\"input_images\">\n            {stream ? (\n              <i className=\"fas fa-camera\" onClick={handleCapture} />\n            ) : (\n              <>\n                <i className=\"fas fa-camera\" onClick={handleStream} />\n                \n              </>\n            )}\n          </div>\n        </div>\n        \n      </form>\n    </div>\n  );\n};\n\nexport default StatusModal;\n"]},"metadata":{},"sourceType":"module"}