{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laureen\\\\Downloads\\\\escort\\\\client\\\\src\\\\components\\\\home\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostCard from \"../PostCard\";\nimport LoadIcon from \"../../images/loading.gif\";\nimport LoadMoreBtn from \"../LoadMoreBtn\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport { POST_TYPES } from \"../../redux/actions/postAction\";\n\nconst Posts = () => {\n  _s();\n\n  const {\n    homePosts,\n    auth,\n    theme\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n\n  const handleLoadMore = async () => {\n    setLoad(true);\n    const res = await getDataAPI(`posts?limit=${homePosts.page * 9}`, auth.token);\n    dispatch({\n      type: POST_TYPES.GET_POSTS,\n      payload: { ...res.data,\n        page: homePosts.page + 1\n      }\n    });\n    setLoad(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, homePosts.posts.map(post => /*#__PURE__*/React.createElement(PostCard, {\n    key: post._id,\n    post: post,\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), load && /*#__PURE__*/React.createElement(\"img\", {\n    src: LoadIcon,\n    alt: \"Loading...\",\n    className: \"d-block mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LoadMoreBtn, {\n    result: homePosts.result,\n    page: homePosts.page,\n    load: load,\n    handleLoadMore: handleLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Posts, \"BQoM4nJtTmSlEMxyTCCpVKaV9Wk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/Laureen/Downloads/escort/client/src/components/home/Posts.js"],"names":["React","useState","useSelector","useDispatch","PostCard","LoadIcon","LoadMoreBtn","getDataAPI","POST_TYPES","Posts","homePosts","auth","theme","state","dispatch","load","setLoad","handleLoadMore","res","page","token","type","GET_POSTS","payload","data","posts","map","post","_id","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,MAA6BV,WAAW,CAAEW,KAAD,IAAWA,KAAZ,CAA9C;AACA,QAAMC,QAAQ,GAAIX,WAAW,EAA7B;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMgB,cAAc,GAAG,YAAY;AACjCD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAME,GAAG,GAAG,MAAMX,UAAU,CAAE,eAAcG,SAAS,CAACS,IAAV,GAAiB,CAAE,EAAnC,EAAsCR,IAAI,CAACS,KAA3C,CAA5B;AACAN,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEb,UAAU,CAACc,SAAnB;AAA8BC,MAAAA,OAAO,EAAE,EAAC,GAAGL,GAAG,CAACM,IAAR;AAAcL,QAAAA,IAAI,EAAET,SAAS,CAACS,IAAV,GAAiB;AAArC;AAAvC,KAAD,CAAR;AACAH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,CAACe,KAAV,CAAgBC,GAAhB,CAAqBC,IAAD,iBACnB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAqC,IAAA,KAAK,EAAEf,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAKGG,IAAI,iBACH;AAAK,IAAA,GAAG,EAAEV,QAAV;AAAoB,IAAA,GAAG,EAAC,YAAxB;AAAqC,IAAA,SAAS,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eASE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEK,SAAS,CAACmB,MADpB;AAEE,IAAA,IAAI,EAAEnB,SAAS,CAACS,IAFlB;AAGE,IAAA,IAAI,EAAEJ,IAHR;AAIE,IAAA,cAAc,EAAEE,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAkBD,CA9BD;;GAAMR,K;UAC+BP,W,EACjBC,W;;;KAFdM,K;AAgCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostCard from \"../PostCard\";\nimport LoadIcon from \"../../images/loading.gif\";\nimport LoadMoreBtn from \"../LoadMoreBtn\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport { POST_TYPES } from \"../../redux/actions/postAction\";\n\nconst Posts = () => {\n  const { homePosts, auth, theme } = useSelector((state) => state);\n  const dispatch =  useDispatch();\n\n  const [load, setLoad] = useState(false);\n\n  const handleLoadMore = async () => {\n    setLoad(true);\n    const res = await getDataAPI(`posts?limit=${homePosts.page * 9}`, auth.token);\n    dispatch({ type: POST_TYPES.GET_POSTS, payload: {...res.data, page: homePosts.page + 1 } });\n    setLoad(false);\n  };\n  return (\n    <div className=\"posts\">\n      {homePosts.posts.map((post) => (\n        <PostCard key={post._id} post={post} theme={theme} />\n      ))}\n\n      {load && (\n        <img src={LoadIcon} alt=\"Loading...\" className=\"d-block mx-auto\" />\n      )}\n\n      <LoadMoreBtn\n        result={homePosts.result}\n        page={homePosts.page}\n        load={load}\n        handleLoadMore={handleLoadMore}\n      />\n    </div>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}