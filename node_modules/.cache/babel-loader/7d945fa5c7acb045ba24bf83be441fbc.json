{"ast":null,"code":"import { ADMIN_TYPES } from \"../actions/adminAction\";\nimport { DeleteData } from \"../actions/globalTypes\";\nimport { USER_ADD } from \"../actions/globalTypes\";\nimport { USER_UPDATE } from \"../actions/globalTypes\";\nimport { SET_CURRENT_USER } from \"../actions/globalTypes\";\nimport { USER_LOADING } from \"../actions/globalTypes\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  total_users: 0,\n  total_posts: 0,\n  total_comments: 0,\n  total_likes: 0,\n  total_active_users: 0,\n  total_spam_posts: 0,\n  spam_posts: [],\n  user_add: [],\n  user_update: []\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADMIN_TYPES.GET_TOTAL_USERS:\n      return { ...state,\n        total_users: action.payload.total_users\n      };\n\n    case USER_ADD:\n      return { ...state,\n        user_add: action.payload.user_add\n      };\n\n    case USER_UPDATE:\n      return { ...state,\n        user_update: action.payload.user_update\n      };\n\n    case SET_CURRENT_USER:\n      return { ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n\n    case USER_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case ADMIN_TYPES.GET_TOTAL_POSTS:\n      return { ...state,\n        total_posts: action.payload.total_posts\n      };\n\n    case ADMIN_TYPES.GET_TOTAL_COMMENTS:\n      return { ...state,\n        total_comments: action.payload.total_comments\n      };\n\n    case ADMIN_TYPES.GET_TOTAL_LIKES:\n      return { ...state,\n        total_likes: action.payload.total_likes\n      };\n\n    case ADMIN_TYPES.GET_TOTAL_SPAM_POSTS:\n      return { ...state,\n        total_spam_posts: action.payload.total_spam_posts\n      };\n\n    case ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS:\n      return { ...state,\n        total_active_users: action.payload\n      };\n\n    case ADMIN_TYPES.LOADING_ADMIN:\n      return { ...state,\n        loading: action.payload\n      };\n\n    case ADMIN_TYPES.GET_SPAM_POSTS:\n      return { ...state,\n        spam_posts: [...action.payload]\n      };\n\n    case ADMIN_TYPES.DELETE_POST:\n      return { ...state,\n        spam_posts: DeleteData(state.spam_posts, action.payload._id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Laureen/Downloads/escort backup/client/src/redux/reducers/adminReducer.js"],"names":["ADMIN_TYPES","DeleteData","USER_ADD","USER_UPDATE","SET_CURRENT_USER","USER_LOADING","isEmpty","require","initialState","total_users","total_posts","total_comments","total_likes","total_active_users","total_spam_posts","spam_posts","user_add","user_update","authReducer","state","action","type","GET_TOTAL_USERS","payload","isAuthenticated","user","loading","GET_TOTAL_POSTS","GET_TOTAL_COMMENTS","GET_TOTAL_LIKES","GET_TOTAL_SPAM_POSTS","GET_TOTAL_ACTIVE_USERS","LOADING_ADMIN","GET_SPAM_POSTS","DELETE_POST","_id"],"mappings":"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","sourcesContent":["import { ADMIN_TYPES } from \"../actions/adminAction\";\r\nimport { DeleteData } from \"../actions/globalTypes\";\r\nimport { USER_ADD } from \"../actions/globalTypes\";\r\nimport { USER_UPDATE } from \"../actions/globalTypes\";\r\nimport { SET_CURRENT_USER } from \"../actions/globalTypes\";\r\nimport { USER_LOADING } from \"../actions/globalTypes\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    total_users: 0,\r\n    total_posts: 0,\r\n    total_comments: 0,\r\n    total_likes: 0,\r\n    total_active_users: 0,\r\n    total_spam_posts: 0,\r\n    spam_posts : [],\r\n    user_add :[] ,\r\n    user_update : []\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_TYPES.GET_TOTAL_USERS:\r\n      return {\r\n        ...state,\r\n        total_users: action.payload.total_users,\r\n      };\r\n      case USER_ADD:\r\n        return {\r\n                ...state,\r\n                user_add: action.payload.user_add,\r\n            };\r\n      case USER_UPDATE:\r\n        return {\r\n                  ...state,\r\n                  user_update: action.payload.user_update,\r\n              };\r\n      case SET_CURRENT_USER:\r\n        return {\r\n                    ...state,\r\n                    isAuthenticated: !isEmpty(action.payload),\r\n                    user: action.payload\r\n                };\r\n      case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n    case ADMIN_TYPES.GET_TOTAL_POSTS:\r\n      return {\r\n        ...state,\r\n        total_posts: action.payload.total_posts,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_COMMENTS:\r\n      return {\r\n        ...state,\r\n        total_comments: action.payload.total_comments,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_LIKES:\r\n      return {\r\n        ...state,\r\n        total_likes: action.payload.total_likes,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_SPAM_POSTS:\r\n      return {\r\n        ...state,\r\n        total_spam_posts: action.payload.total_spam_posts,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS:\r\n      return {\r\n        ...state,\r\n        total_active_users: action.payload,\r\n      };\r\n\r\n    case ADMIN_TYPES.LOADING_ADMIN:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_SPAM_POSTS:\r\n      return {\r\n        ...state,\r\n        spam_posts: [...action.payload],\r\n      };\r\n    case ADMIN_TYPES.DELETE_POST:\r\n      return {\r\n        ...state,\r\n        spam_posts: DeleteData(state.spam_posts, action.payload._id),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}