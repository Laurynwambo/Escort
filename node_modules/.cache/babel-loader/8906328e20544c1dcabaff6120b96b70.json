{"ast":null,"code":"/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { follow, unfollow } from \"../redux/actions/profileAction\";\n\nconst FollowBtn = ({user}) => {\n    const [ followed, setFollowed ] = useState(false);\n\n    const { auth, profile, socket } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    const [load, setLoad] = useState(false);\n\n    useEffect(() => {\n      if (auth.user.following.find((item) => item._id === user._id)) {\n        setFollowed(true);\n      }\n      return () => setFollowed(false);\n    }, [auth.user.following, user._id]);\n\n    const handleFollow = async () => {\n        if(load) return;\n\n        setFollowed(true);\n        setLoad(true);\n        await dispatch(follow({ users: profile.users, user, auth, socket }));\n        setLoad(false);\n    };\n\n    const handleUnFollow = async () => {\n      if (load) return;\n\n      setFollowed(false);\n      setLoad(true);\n      await dispatch(unfollow({ users: profile.users, user, auth, socket }));\n      setLoad(false);\n    };\n\n\n    return (\n      <>\n        {followed ? (\n          <button className=\"btn-1 hover-in-shadow outer-shadow\" onClick={handleUnFollow}>\n            Unfollow\n          </button>\n        ) : (\n          <button className=\"btn-1 hover-in-shadow outer-shadow\" onClick={handleFollow}>\n            Follow\n          </button>\n        )}\n      </>\n    );\n}\n\nexport default FollowBtn */","map":{"version":3,"sources":["C:/Users/Laureen/Downloads/escort/client/src/components/FollowBtn.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { follow, unfollow } from \"../redux/actions/profileAction\";\n\nconst FollowBtn = ({user}) => {\n    const [ followed, setFollowed ] = useState(false);\n\n    const { auth, profile, socket } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    const [load, setLoad] = useState(false);\n\n    useEffect(() => {\n      if (auth.user.following.find((item) => item._id === user._id)) {\n        setFollowed(true);\n      }\n      return () => setFollowed(false);\n    }, [auth.user.following, user._id]);\n\n    const handleFollow = async () => {\n        if(load) return;\n\n        setFollowed(true);\n        setLoad(true);\n        await dispatch(follow({ users: profile.users, user, auth, socket }));\n        setLoad(false);\n    };\n\n    const handleUnFollow = async () => {\n      if (load) return;\n\n      setFollowed(false);\n      setLoad(true);\n      await dispatch(unfollow({ users: profile.users, user, auth, socket }));\n      setLoad(false);\n    };\n\n\n    return (\n      <>\n        {followed ? (\n          <button className=\"btn-1 hover-in-shadow outer-shadow\" onClick={handleUnFollow}>\n            Unfollow\n          </button>\n        ) : (\n          <button className=\"btn-1 hover-in-shadow outer-shadow\" onClick={handleFollow}>\n            Follow\n          </button>\n        )}\n      </>\n    );\n}\n\nexport default FollowBtn */\n"]},"metadata":{},"sourceType":"module"}