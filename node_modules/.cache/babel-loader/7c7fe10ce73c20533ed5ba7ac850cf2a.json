{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laureen\\\\Downloads\\\\escort\\\\client\\\\src\\\\components\\\\home\\\\InputComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComment } from '../../redux/actions/commentAction';\nimport Icons from '../Icons';\n\nconst InputComment = _ref => {\n  _s();\n\n  let {\n    children,\n    post,\n    onReply,\n    setOnReply\n  } = _ref;\n  const [content, setContent] = useState(\"\");\n  const {\n    auth,\n    socket,\n    theme\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!content.trim()) {\n      if (setOnReply) {\n        return setOnReply(false);\n      }\n\n      return;\n    }\n\n    setContent(\"\");\n    const newComment = {\n      content,\n      likes: [],\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply.commentId,\n      tag: onReply && onReply.user\n    };\n    dispatch(createComment({\n      post,\n      newComment,\n      auth,\n      socket\n    }));\n\n    if (setOnReply) {\n      return setOnReply(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card-footer comment_input\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add comments...\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    style: {\n      filter: theme ? \"invert(1)\" : \"invert(0)\",\n      color: theme ? \"white\" : \"#111\",\n      background: theme ? \"rgb(0,0,0,0.3)\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Icons, {\n    setContent: setContent,\n    content: content,\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"postBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Post\"));\n};\n\n_s(InputComment, \"mdTskNqcpBXRUfycre4ws/UIETw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = InputComment;\nexport default InputComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputComment\");","map":{"version":3,"sources":["C:/Users/Laureen/Downloads/escort/client/src/components/home/InputComment.js"],"names":["React","useState","useDispatch","useSelector","createComment","Icons","InputComment","children","post","onReply","setOnReply","content","setContent","auth","socket","theme","state","dispatch","handleSubmit","e","preventDefault","trim","newComment","likes","user","createdAt","Date","toISOString","reply","commentId","tag","target","value","filter","color","background"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,YAAY,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAA4C;AAChE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA0BZ,WAAW,CAAEa,KAAD,IAAWA,KAAZ,CAA3C;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACT,OAAO,CAACU,IAAR,EAAL,EAAoB;AAClB,UAAGX,UAAH,EAAc;AAAC,eAAOA,UAAU,CAAC,KAAD,CAAjB;AAAyB;;AACxC;AACD;;AAEDE,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEA,UAAMU,UAAU,GAAG;AACjBX,MAAAA,OADiB;AAEjBY,MAAAA,KAAK,EAAE,EAFU;AAGjBC,MAAAA,IAAI,EAAEX,IAAI,CAACW,IAHM;AAIjBC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJM;AAKjBC,MAAAA,KAAK,EAAEnB,OAAO,IAAIA,OAAO,CAACoB,SALT;AAMjBC,MAAAA,GAAG,EAAErB,OAAO,IAAIA,OAAO,CAACe;AANP,KAAnB;AAQAP,IAAAA,QAAQ,CAACb,aAAa,CAAC;AAAEI,MAAAA,IAAF;AAAQc,MAAAA,UAAR;AAAoBT,MAAAA,IAApB;AAA0BC,MAAAA;AAA1B,KAAD,CAAd,CAAR;;AACA,QAAIJ,UAAJ,EAAgB;AACd,aAAOA,UAAU,CAAC,KAAD,CAAjB;AACD;AACF,GArBD;;AAuBA,sBACE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,QAAQ,EAAEQ,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QADH,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,KAAK,EAAEI,OAHT;AAIE,IAAA,QAAQ,EAAGQ,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACY,MAAF,CAASC,KAAV,CAJ7B;AAKE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAElB,KAAK,GAAG,WAAH,GAAiB,WADzB;AAELmB,MAAAA,KAAK,EAAEnB,KAAK,GAAG,OAAH,GAAa,MAFpB;AAGLoB,MAAAA,UAAU,EAAEpB,KAAK,GAAG,gBAAH,GAAsB;AAHlC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAaE,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEH,UAAnB;AAA+B,IAAA,OAAO,EAAED,OAAxC;AAAiD,IAAA,KAAK,EAAEI,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,CADF;AAoBD,CAjDD;;GAAMT,Y;UAG4BH,W,EACfD,W;;;KAJbI,Y;AAmDN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComment } from '../../redux/actions/commentAction';\nimport Icons from '../Icons';\n\nconst InputComment = ({ children, post, onReply, setOnReply }) => {\n  const [content, setContent] = useState(\"\");\n\n  const { auth, socket, theme } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!content.trim()){\n      if(setOnReply){return setOnReply(false)}\n      return;\n    }\n\n    setContent(\"\");\n\n    const newComment = {\n      content,\n      likes: [],\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply.commentId,\n      tag: onReply && onReply.user\n    };\n    dispatch(createComment({ post, newComment, auth, socket }));\n    if (setOnReply) {\n      return setOnReply(false);\n    }\n  };\n\n  return (\n    <form className=\"card-footer comment_input\" onSubmit={handleSubmit}>\n      {children}\n      <input\n        type=\"text\"\n        placeholder=\"Add comments...\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        style={{\n          filter: theme ? \"invert(1)\" : \"invert(0)\",\n          color: theme ? \"white\" : \"#111\",\n          background: theme ? \"rgb(0,0,0,0.3)\" : \"\",\n        }}\n      />\n      <Icons setContent={setContent} content={content} theme={theme} />\n      <button type=\"submit\" className=\"postBtn\">\n        Post\n      </button>\n    </form>\n  );\n};\n\nexport default InputComment;\n"]},"metadata":{},"sourceType":"module"}